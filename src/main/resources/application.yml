spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hotel_booking_management
    driverClassName: com.mysql.cj.jdbc.Driver
    username: ${DBMS_USERNAME}
    password: ${DBMS_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_ID}
    password: ${APP_PASS_GMAIL}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          debug: true
  data:
    redis:
      host: localhost
      port: 6379
  rabbitmq:
    host: localhost
    port: 5672
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

#Config token
jwt:
  private-key: ${PRIVATE_KEY}
  valid-duration: 600 #seconds
  issuer: hotel_booking_management

refresh-token:
  ttl: 15 #days

password-reset-token:
  ttl-seconds: 300 #seconds

#Spring actuator
management:
  endpoints:
    web:
      exposure:
        include: beans

#Begin for log and debug
logging:
  level:
    org:
      springframework:
        security: DEBUG
        security.oauth2: DEBUG
#End for log and debug

#Base URL
base-url: http://localhost:8080

#Config folder name storing upload file
file:
  upload-folder: uploads/images/
  user-avatar-folder: avatars
  room-type-img-folder: roomTypeImages
  hotel-img-folder: hotelImages

#Lock strategy
lock-strategy: pessimistic

#Lenght of booking code
booking-code:
  length: 8

#Config VNPay
vnp:
  version: 2.1.0
  command: pay
  tmnCode: ${vnp_TmnCode}
  hashSecret: ${vnp_HashSecret}
  payUrl: https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
  currCode: VND
  locale: vn
  orderType: 170000
  returnUrl: https://wellvirgo.github.io/Booking_UI
  orderInfoPattern: "Thanh toán cho booking có Booking code: %s"

#Config RabbitMQ
rabbitmq:
  queue:
    bookingDelay: booking.delay.queue
    bookingCancel: booking.cancel.queue
  exchange:
    booking: booking.exchange
  routingKey:
    bookingDelay: booking.delay
    bookingCancel: booking.cancel

#Config otp
otp:
  password-reset:
    ttl-seconds: 300 #seconds